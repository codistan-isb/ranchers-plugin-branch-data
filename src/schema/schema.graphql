type Branch {
  _id: ID
  name: String
  address: String
  phoneNumber1: String
  phoneNumber2: String
  phoneNumber3: String
  displayName: String
  Latitude: Float
  Longitude: Float
  City: String
  Description: String
  createdAt: String
  updatedAt: String
  Sector: String
  Timing: String
  deliveryArea: String
  taxID: ID
  taxInfo: taxRate
  deliveryStatus: Boolean
}
type orderStatReport {
  totalOrders: Int
  deliveredOrders: Int
  canceledOrders: Int
  rejectedOrders: Int
  inProcessOrders: Int
  inQueueOrders: Int
  inReadyOrders: Int
  pickedUpOrders: Int
  confirmedOrders: Int
}
input UpdateBranchDataInput {
  name: String
  address: String
  phoneNumber1: String
  phoneNumber2: String
  phoneNumber3: String
  Latitude: Float
  Longitude: Float
  City: String
  Description: String
  Sector: String
  Timing: String
  deliveryArea: String
  taxID: ID
  deliveryStatus: Boolean
  displayName: String
}

input CreateBranchInput {
  name: String!
  address: String!
  phoneNumber1: String
  phoneNumber2: String
  phoneNumber3: String
  Latitude: Float
  Longitude: Float
  City: String
  Description: String
  Sector: String
  Timing: String
  deliveryArea: String
  taxID: ID
  deliveryStatus: Boolean
  displayName: String
}
type orderStatusStat {
  totalOrders: Int
}
input orderStatusStatInput {
  branchId: String!
  status: OrderStatusValue
  startDate: DateTime
  endDate: DateTime
}
type taxRate {
  _id: ID
  Label: String
  Region: String
  Cash: Float
  Card: Float
}
input taxRateInput {
  Label: String
  Region: String
  Cash: Float
  Card: Float
}
input orderStatReportInput {
  branchId: ID!
  startDate: DateTime
  endDate: DateTime
}

type Mutation {
  createBranch(input: CreateBranchInput!): Branch
  deleteBranch(_id: ID!): Boolean
  updateBranchData(_id: ID!, input: UpdateBranchDataInput): Branch
  createTax(input: taxRateInput): taxRate
  updateTax(
    _id: ID
    Label: String
    Region: String
    Cash: Float
    Card: Float
  ): taxRate
  deleteTax(_id: ID): Boolean
}

type Query {
  branches: [Branch]
  getBranchByName(name: String!): Branch
  getRiderCount(name: String!): Int!
  getBranchByCityName(City: String): [Branch]
  getAlltaxData: [taxRate]
  getOrderReportStat(input: orderStatReportInput): orderStatReport
  getOrderStatusReport(input: orderStatusStatInput): orderStatusStat
}
